<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.xilopaint.alfredapp.youtube</string>
	<key>category</key>
	<string>Internet</string>
	<key>connections</key>
	<dict>
		<key>16094B46-C66E-4E56-8EA2-35C146C1E1EE</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4BA3ADC5-1A29-4031-837C-44A6CBE6FE85</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>23881008-ABCE-4E07-84B3-40CBD5F5F810</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4BA3ADC5-1A29-4031-837C-44A6CBE6FE85</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4BA3ADC5-1A29-4031-837C-44A6CBE6FE85</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>FA51DB74-FBD1-4FD7-8357-C186CA92C630</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>4EED8CAA-4F68-4044-BFC9-E02BE0A95F5C</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>4BA3ADC5-1A29-4031-837C-44A6CBE6FE85</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Arthur Pinheiro</string>
	<key>description</key>
	<string>Search YouTube videos</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>YouTube Search</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:video_search_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Fetching results...</string>
				<key>script</key>
				<string>./ytsearch video "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>YouTube.swift</string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>YouTube Video Search</string>
				<key>type</key>
				<integer>5</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>4EED8CAA-4F68-4044-BFC9-E02BE0A95F5C</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>skipqueryencode</key>
				<false/>
				<key>skipvarencode</key>
				<false/>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string></string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>4BA3ADC5-1A29-4031-837C-44A6CBE6FE85</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:channel_search_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Fetching results...</string>
				<key>script</key>
				<string>./ytsearch channel "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>YouTube.swift</string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>YouTube Channel Search</string>
				<key>type</key>
				<integer>5</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>23881008-ABCE-4E07-84B3-40CBD5F5F810</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist='https://raw.githubusercontent.com/xilopaint/alfred-youtube/main/workflow/info.plist'
readonly workflow_url='xilopaint/alfred-youtube'
readonly download_type='github_release'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>FA51DB74-FBD1-4FD7-8357-C186CA92C630</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>{var:playlist_search_keyword}</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<false/>
				<key>queuedelaymode</key>
				<integer>1</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Fetching results...</string>
				<key>script</key>
				<string>./ytsearch playlist "$1"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string>YouTube.swift</string>
				<key>subtext</key>
				<string></string>
				<key>title</key>
				<string>YouTube Playlist Search</string>
				<key>type</key>
				<integer>5</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>16094B46-C66E-4E56-8EA2-35C146C1E1EE</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
	</array>
	<key>readme</key>
	<string># Setup

The workflow requires an API key, which can be requested and set up by following the steps 1-3 that you can find [here](https://developers.google.com/youtube/v3/getting-started#before-you-start).

# Usage

Search videos via the `yt` keyword:

![video search](images/about/demo-1.png)

Search channels via the `ytc` keyword:

![channel search](images/about/demo-2.png)

When displaying channels, select one of them and use the ⌘ modifier key to show its description.

Search playlists via the `ytp` keyword:

![playlist search](images/about/demo-3.png)</string>
	<key>uidata</key>
	<dict>
		<key>16094B46-C66E-4E56-8EA2-35C146C1E1EE</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>315</real>
		</dict>
		<key>23881008-ABCE-4E07-84B3-40CBD5F5F810</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>170</real>
		</dict>
		<key>4BA3ADC5-1A29-4031-837C-44A6CBE6FE85</key>
		<dict>
			<key>xpos</key>
			<real>235</real>
			<key>ypos</key>
			<real>170</real>
		</dict>
		<key>4EED8CAA-4F68-4044-BFC9-E02BE0A95F5C</key>
		<dict>
			<key>xpos</key>
			<real>30</real>
			<key>ypos</key>
			<real>25</real>
		</dict>
		<key>FA51DB74-FBD1-4FD7-8357-C186CA92C630</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<real>425</real>
			<key>ypos</key>
			<real>170</real>
		</dict>
	</dict>
	<key>userconfigurationconfig</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>yt</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Video Search Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>video_search_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>ytc</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Channel Search Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>channel_search_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>ytp</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<false/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Playlist Search Keyword</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>playlist_search_keyword</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string></string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>Check the About panel on how to get your API key.</string>
			<key>label</key>
			<string>API Key</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>api_key</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>20</string>
				<key>placeholder</key>
				<string></string>
				<key>required</key>
				<true/>
				<key>trim</key>
				<true/>
			</dict>
			<key>description</key>
			<string>Maximum number of results displayed.</string>
			<key>label</key>
			<string>Max Results</string>
			<key>type</key>
			<string>textfield</string>
			<key>variable</key>
			<string>max_results</string>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>default</key>
				<string>relevance</string>
				<key>pairs</key>
				<array>
					<array>
						<string>Date</string>
						<string>date</string>
					</array>
					<array>
						<string>Rating</string>
						<string>rating</string>
					</array>
					<array>
						<string>Relevance</string>
						<string>relevance</string>
					</array>
					<array>
						<string>Title</string>
						<string>title</string>
					</array>
				</array>
			</dict>
			<key>description</key>
			<string></string>
			<key>label</key>
			<string>Sort By</string>
			<key>type</key>
			<string>popupbutton</string>
			<key>variable</key>
			<string>order</string>
		</dict>
	</array>
	<key>version</key>
	<string>0.3.0</string>
	<key>webaddress</key>
	<string>https://www.github.com/xilopaint/alfred-youtube</string>
</dict>
</plist>
